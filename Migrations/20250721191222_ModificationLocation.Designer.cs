// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kami_heim.Data;

#nullable disable

namespace kami_heim.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250721191222_ModificationLocation")]
    partial class ModificationLocation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("kami_heim.Models.Bien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Biens");
                });

            modelBuilder.Entity("kami_heim.Models.Locataire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locataires");
                });

            modelBuilder.Entity("kami_heim.Models.Location", b =>
                {
                    b.Property<int>("BienId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocataireId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("TEXT");

                    b.HasKey("BienId", "LocataireId");

                    b.HasIndex("LocataireId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("kami_heim.Models.Location", b =>
                {
                    b.HasOne("kami_heim.Models.Bien", "Bien")
                        .WithMany("Locations")
                        .HasForeignKey("BienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kami_heim.Models.Locataire", "Locataire")
                        .WithMany("Locations")
                        .HasForeignKey("LocataireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bien");

                    b.Navigation("Locataire");
                });

            modelBuilder.Entity("kami_heim.Models.Bien", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("kami_heim.Models.Locataire", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
